version: "3"
services:
  api-gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    volumes:
      - ./api-gateway:/usr/src/app
    command: air
    ports:
      - "8080:8080"
    depends_on:
       - auth-server
      
  auth-server:
    build:
      context: ./auth-server/
      dockerfile: Dockerfile
    volumes:
      - ./auth-server:/usr/src/app
    command: air
    env_file: .env
    ports:
      - "8001:8001"
      - "50051:50051"

  auth-server-db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-db2:/var/lib/postgresql/data
      - ./auth-server/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  trip-management-server:
    build:
      context: ./trip-management/
      dockerfile: Dockerfile
    volumes:
      - ./trip-management:/usr/src/app
    command: air
    env_file: .env
    ports:
      - "8002:8002"
    depends_on:
      - mongo
      - kafka

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: 1234
    #   MONGO_INITDB_DATABASE: uber-trip-db
    volumes:
      - mongodb_data1:/data/db
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2.8.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
    depends_on:
      - zookeeper

volumes:
  postgres-db2:
  mongodb_data1:
